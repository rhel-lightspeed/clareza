[project]
name = "clareza"
dynamic = ["version"]
description = "API for returning documents from a RAG database"
authors = [
  { name = "Major Hayden", email = "major@redhat.com" },
  { name = "Rodolfo Olivieri", email = "rolivier@redhat.com" },
]
readme = "README.md"
packages = [{ include = "clareza" }]
requires-python = ">=3.12,<3.13"
dependencies = [
  "fastapi[all]>=0.115.6",
  "llama-index>=0.12.4",
  "llama-index-vector-stores-postgres>=0.3.3",
  "llama-index-llms-ibm>=0.3.0",
  "llama-index-embeddings-ibm>=0.3.0",
]
license = { text = "Apache Software License 2.0" }
keywords = ['python']

[project.urls]
Homepage = "https://major.github.io/clareza/"
Repository = "https://github.com/major/clareza"
Documentation = "https://major.github.io/clareza/"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.black]
line-length = 120
target-version = ['py37']
preview = true

[tool.mypy]
files = ["clareza"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["clareza"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.pdm.version]
source = "scm"

[tool.pdm.build]
excludes = ["./**/.git"]
package-dir = "."
includes = ["clareza"]


[dependency-groups]
test = [
  "pytest>=7.2.0",
  "pytest-cov>=4.0.0",
  "pytest-randomly>=3.16.0",
  "pytest-sugar>=1.0.0",
]
dev = [
  "deptry>=0.6.4",
  "mypy>=0.981",
  "pre-commit>=2.20.0",
  "tox>=3.25.1",
  "pytest-env>=1.1.5",
]

[tool.pytest.ini_options]
env = ["WATSONX_APIKEY=test", "WATSONX_PROJECT_ID=test"]
testpaths = ["tests"]
addopts = ["--cov=clareza", "--cov-report=term-missing"]
